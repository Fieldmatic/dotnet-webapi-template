{
  "App": {
    "Name": "Dwt",
    "Version": "0.0.0",
    "Description": "Dotnet Web API Template"
  },

  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },

  "AllowedHosts": "*",

  "ConnectionStrings": {
    "NotesDbContext": "Data Source=./data/sqlite/todo.db"
  },

  "Bootstrap": {
    // The application's main bootstrapper. It must implement Dwt.Api.Bootstrap.IApplicationBootstrapper interface.
    "Application": "Dwt.Api.Bootstrap.ApplicationBootstrapper",

    // Other bootstrappers. Bootstrappers are invoked in the order defined here.
    // - If a bootstrapper fails, the whole bootstrapping process will also fail and the application will not start.
    // - If a bootstrapper is async, it will be invoked in the background and its failure will not stop the bootstrapping process.
    "Components": [
      "Dwt.Api.Bootstrap.CryptoKeysBootstrapper",
      "Dwt.Api.Bootstrap.JwtBootstrapper",
      "Dwt.Api.Bootstrap.SampleAuthenticatorAsyncBootstrapper"
    ]
  },

  // Cryptography keys
  "Keys": {
    // Path to the PFX file and password to open it. The PFX file must contain a RSA private key.
    "RSAPFXFile": "./config/cert.pfx",
    "RSAPFXPassword": "S2cretP2ssword",

    // Or, path to the RSA private key file. The file must be in PEM format.
    // Note: if both RSAPFXFile and RSAPrivKeyFile are provided, RSAPFXFile will take precedence.
    "RSAPrivKeyFile": "./config/private-key.pem"
  },

  "Jwt": {
    "Issuer": "dotnet-webapi-template",
    "Audience": "http://localhost:8080",
    "Expiration": 7200, // default expiration time in seconds
    //"Key": "S3cretK3yP@dd1ngzJh^H/9V+q),c'8I", // (min size = 32 bytes) if not empty the JWT will be signed with this key using HMACSHA256; otherwise, it will be signed with the RSA private key using RSASHA256
    "": ""
  },

  // Sample user database
  "Users": [
    {
      "id": "admin",
      "password": "@dminS3cret",
      "role": "ADMIN" // role can be a single role or a comma-separated list of roles
    },
    {
      "id": "manager",
      "password": "M@nagerS3cret",
      "role": "MANAGER"
    },
    {
      "id": "hrstaff",
      "password": "St@ffS3cret",
      "role": "HR"
    },
    {
      "id": "itstaff",
      "password": "St@ffS3cret",
      "role": "IT"
    },
    {
      "id": "auditstaff",
      "password": "St@ffS3cret",
      "role": "HR,IT"
    }
  ]
}
