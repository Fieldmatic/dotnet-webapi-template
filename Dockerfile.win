
# syntax=docker/dockerfile:1

ARG DOTNETVERSION=8.0

FROM mcr.microsoft.com/dotnet/sdk:$DOTNETVERSION-nanoserver-ltsc2022 AS build
# FROM mcr.microsoft.com/dotnet/sdk:$DOTNETVERSION-windowsservercore-ltsc2022 AS build

COPY . /source
WORKDIR /source

ARG TARGETARCH
ARG BUILDPLATFORM
ARG TARGETPLATFORM

# This is the project name, used to build the application.
# Change this to match the name of your project.
ARG PROJECT=dwt

# Build the application.
RUN echo "I am running on %BUILDPLATFORM%, building for %TARGETPLATFORM% / %TARGETARCH%"
RUN echo "I am running on $BUILDPLATFORM, building for $TARGETPLATFORM / $TARGETARCH"
RUN dotnet restore -a ${TARGETARCH} ${PROJECT}.csproj
# RUN dotnet publish ${PROJECT}.csproj -a ${TARGETARCH} --no-restore -o /app

# ################################################################################

# # If you need to enable globalization and time zones:
# # https://github.com/dotnet/dotnet-docker/blob/main/samples/enable-globalization.md

# FROM mcr.microsoft.com/dotnet/aspnet:$DOTNETVERSION-nanoserver-1809 AS final
# WORKDIR /app

# COPY --from=build /app ./
# COPY ./config ./config
# COPY ./data ./data

# # Create a non-privileged user that the app will run under.
# # See https://docs.docker.com/go/dockerfile-user-best-practices/
# USER appuser

# # Default port for dotnet application
# EXPOSE 8080

# # Change this to match the name of your project.
# ENTRYPOINT ["dotnet", "dwt.dll"]
