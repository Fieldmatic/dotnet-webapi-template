name: 'ci'

on:
  push:
    branches: [ '*' ]
  pull_request:
    types: [ opened, edited, reopened, synchronize, review_requested ]
    branches: [ '*' ]
  workflow_call:

env:
  PROJ_FILE: dwt.csproj
  TAG_PREFIX: v

jobs:
  BuildAndTest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: [ '8.x', '9.x' ]
    name: Run tests with dotnet ${{ matrix.dotnet }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup dotnet ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - name: Display dotnet version
        run: dotnet --version
      - name: Install dependencies
        run: dotnet restore ${{ env.PROJ_FILE }}
      - name: Build
        run: dotnet build --no-restore ${{ env.PROJ_FILE }}
      - name: Test
        run: dotnet test --no-restore ${{ env.PROJ_FILE }}
      # - name: Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     fail_ci_if_error: true
      #     token: ${{ secrets.CODECOV_TOKEN }}

  TestDockerfile (Linux):
    needs: BuildAndTest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platorms: [ 'linux/amd64', 'linux/arm64' ]
    name: Test build Docker image for ${{ matrix.platforms }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build docker image
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platforms }}
          push: false
          tags: test
          file: ./Dockerfile
          context: ./

  ReleaseDryRun:
    if: github.event_name == 'push'
    needs: BuildAndTest
    runs-on: ubuntu-latest
    outputs:
      RESULT: ${{ steps.release_dry_run.outputs.result }}
      VERSION: ${{ steps.release_dry_run.outputs.releaseVersion }}
      RELEASE_NOTES: ${{ steps.release_dry_run.outputs.releaseNotes }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - name: Release (dry-run)
        id: release_dry_run
        uses: btnguyen2k/action-semrelease@v3
        with:
          dry-run: true
          auto-mode: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tag-major-release: false
          tag-minor-release: false
          branches: ${{ github.ref_name }}
          tag-prefix: ${{ env.TAG_PREFIX }}
          tag-only: true
